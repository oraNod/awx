# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Red Hat Inc.
# This file is distributed under the same license as the Ansible Tower
# Administration Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Tower Administration Guide 3.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-08 12:30-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: ../../source/social_auth.rst:5
msgid "Setting up Authentication"
msgstr ""

#: ../../source/social_auth.rst:12
msgid ""
"|at| version 2.4.0 added authentication methods to help simplify logins "
"for end users--offering single sign-ons using existing login information "
"to sign into a third party website rather than creating a new login "
"account specifically for that website."
msgstr ""

#: ../../source/social_auth.rst:14
msgid ""
"Social authentication in |at| can be configured to centrally use OAuth2, "
"while enterprise-level authentication can be configured for SAML, RADIUS,"
" or even LDAP as a source for authentication information."
msgstr ""

#: ../../source/social_auth.rst:16
msgid ""
"For websites, such as Google or GitHub, that offer social functionality "
"to users, social login is often implemented using the OAuth standard. "
"OAuth is a secure authorization protocol which is commonly used in "
"conjunction with authentication to grant 3rd party applications a "
"\"session token\" allowing them to make API calls to providers on the "
"userâ€™s behalf."
msgstr ""

#: ../../source/social_auth.rst:18
msgid ""
"SAML (Security Assertion Markup Language) is an XML-based, open-standard "
"data format for exchanging authentication and authorization data between"
"  an identity provider and a service provider."
msgstr ""

#: ../../source/social_auth.rst:20
msgid ""
"The RADIUS distributed client/server system allows you to secure networks"
" against unauthorized access and can be implemented in network "
"environments requiring high levels of security while maintaining network "
"access for remote users."
msgstr ""

#: ../../source/social_auth.rst:23
msgid "Basic Authentication Settings:"
msgstr ""

#: ../../source/social_auth.rst:29
msgid ""
"To enable or disable HTTP basic authentication as used in the API "
"browser, edit the ``sessions.py`` file, setting the following line as "
"either ``True`` or ``False``:"
msgstr ""

#: ../../source/social_auth.rst:36
msgid ""
"After saving your changes, run the ``ansible-tower-service restart`` "
"command to ensure your changes take effect."
msgstr ""

#: ../../source/social_auth.rst:40
msgid "Google OAuth2 Settings"
msgstr ""

#: ../../source/social_auth.rst:46
msgid ""
"Create a project at https://console.developers.google.com/ and obtain an "
"OAuth2 key and secret for a web application.  You will also need to "
"provide the following callback URL for your application, replacing "
"\"tower.example.com\" with the FQDN to your Tower server: "
"``https://tower.example.com/sso/complete/google-oauth2/``"
msgstr ""

#: ../../source/social_auth.rst:48
msgid "Ensure that the Google+ API is enabled."
msgstr ""

#: ../../source/social_auth.rst:50 ../../source/social_auth.rst:81
msgid ""
"Edit the ``/etc/tower/conf.d/social_auth.py`` file and enter in the "
"appropriate values:"
msgstr ""

#: ../../source/social_auth.rst:57
msgid ""
"To restrict the domains who are allowed to login using Google OAuth2, "
"uncomment the following line."
msgstr ""

#: ../../source/social_auth.rst:63
msgid ""
"To only allow a single domain to authenticate using Google OAuth2, "
"uncomment the following line; Google will not display any other accounts "
"if the user is logged in with multiple Google accounts."
msgstr ""

#: ../../source/social_auth.rst:69
msgid ""
"Refer to the Python Social Auth documentation for advanced settings: "
"https://python-social-auth.readthedocs.org/en/latest/backends/google"
".htmlgoogle-oauth2"
msgstr ""

#: ../../source/social_auth.rst:71 ../../source/social_auth.rst:129
#: ../../source/social_auth.rst:224 ../../source/social_auth.rst:251
msgid ""
"Run ``ansible-tower-service restart`` on the Tower server to restart the "
"instance and apply your changes."
msgstr ""

#: ../../source/social_auth.rst:74
msgid "Github OAuth2 Settings"
msgstr ""

#: ../../source/social_auth.rst:79
msgid ""
"Create a developer application at https://github.com/settings/developers "
"and obtain an OAuth2 key (Client ID) and secret (Client Secret).  You "
"will also need to provide the following callback URL for your "
"application, replacing \"tower.example.com\" with the FQDN to your Tower "
"server: ``https://tower.example.com/sso/complete/github/``"
msgstr ""

#: ../../source/social_auth.rst:90
msgid ""
"When defining authentication with either an organization or a team within"
" an organization, you should use the specific organization and team "
"settings. Authentication can be limited by an organization as well as by "
"a team within an organization."
msgstr ""

#: ../../source/social_auth.rst:92
msgid ""
"You can also choose to allow all by specifying non-organization or non-"
"team based settings (as shown above)."
msgstr ""

#: ../../source/social_auth.rst:94
msgid ""
"To limit users who can login to Tower, in this case, to only those in an "
"organization or on a team within an organization, rather than using:"
msgstr ""

#: ../../source/social_auth.rst:100
msgid ""
"Use the following instead (depending on whether you are setting up for an"
" organization or a team):"
msgstr ""

#: ../../source/social_auth.rst:109
msgid ""
"To setup authentication for your organization, create an organization-"
"owned application at "
"``https://github.com/organizations/<yourorg>/settings/applications`` and "
"obtain an OAuth2 key (Client ID) and secret (Client Secret). Each key and"
" secret must belong to a unique application and cannot be shared or "
"reused between different social authentication backends. Provide the "
"following callback URL for your application, replacing "
"\"tower.example.com\" with the FQDN to your Tower server: "
"``https://tower.example.com/sso/complete/github-org/``"
msgstr ""

#: ../../source/social_auth.rst:117
msgid ""
"To setup authentication for your team, create a team-owned application at"
" ``https://github.com/organizations/<yourorg>/settings/applications`` and"
" obtain an OAuth2 key (Client ID) and secret (Client Secret). Each key "
"and secret must belong to a unique application and cannot be shared or "
"reused between different social authentication backends. You will also "
"need to provide the following callback URL for your application, "
"replacing \"tower.example.com\" with the FQDN to your Tower server: "
"``https://tower.example.com/sso/complete/github-team/``"
msgstr ""

#: ../../source/social_auth.rst:119
msgid ""
"Find the numeric team ID using the Github API: http://fabian-"
"kostadinov.github.io/2015/01/16/how-to-find-a-github-team-id/"
msgstr ""

#: ../../source/social_auth.rst:127
msgid ""
"Refer to Python Social Auth documentation for advanced settings: https"
"://python-social-auth.readthedocs.org/en/latest/backends/github.html"
msgstr ""

#: ../../source/social_auth.rst:132
msgid "SAML Authentication Settings"
msgstr ""

#: ../../source/social_auth.rst:139
msgid ""
"SAML authentication is a feature specific to Enterprise-level license "
"holders."
msgstr ""

#: ../../source/social_auth.rst:141
msgid ""
"To setup SAML authentication, edit the "
"``/etc/tower/conf.d/social_auth.py`` file and enter in the appropriate "
"values."
msgstr ""

#: ../../source/social_auth.rst:143
msgid ""
"Set the ``SOCIAL_AUTH_SAML_SP_ENTITY_ID`` to a URL for a domain name you "
"own (does not need to be a valid URL as this value is only used as a "
"unique ID)."
msgstr ""

#: ../../source/social_auth.rst:150
msgid ""
"Create a keypair for Tower to use as a service provider (SP) and include "
"the certificate and private key contents:"
msgstr ""

#: ../../source/social_auth.rst:157
msgid "As an example for public certs:"
msgstr ""

#: ../../source/social_auth.rst:167
msgid "As an example for private keys:"
msgstr ""

#: ../../source/social_auth.rst:177
msgid ""
"Configure the following settings with information about your application "
"and contact information:"
msgstr ""

#: ../../source/social_auth.rst:198
msgid ""
"Configure the entity ID, SSO URL and certificate for each identity "
"provider (IdP) in use.  Multiple SAML IdPs are supported."
msgstr ""

#: ../../source/social_auth.rst:200
msgid ""
"Some IdPs may provide user data using attribute names that differ from "
"the  default OIDs (https://github.com/omab/python-social-"
"auth/blob/master/social/backends/saml.py). Attribute names may be "
"overridden for each IdP as shown below."
msgstr ""

#: ../../source/social_auth.rst:222
msgid ""
"Your SAML identity provider (IdP) may provide a certificate to put into "
"the x509cert field. You can take that certificate (assuming it is base64 "
"encoded), remove the BEGIN and END lines, concatenate all of the "
"remaining lines into one (making sure there are no spaces), and put that "
"single long line, string into the field."
msgstr ""

#: ../../source/social_auth.rst:226
msgid ""
"Once configuration is complete, you must register your SP with each IdP."
"  Provide the entity ID and the following callback URL for your "
"application, replacing \"tower.example.com\" with the FQDN to your Tower "
"server: ``https://tower.example.com/sso/complete/saml/``"
msgstr ""

#: ../../source/social_auth.rst:228
msgid ""
"If your IdP allows uploading an XML metadata file, you can download one "
"from your Tower installation customized with the settings above: "
"``https://tower.example.com/sso/metadata/saml/``"
msgstr ""

#: ../../source/social_auth.rst:232
msgid "RADIUS Authentication Settings"
msgstr ""

#: ../../source/social_auth.rst:239
msgid ""
"RADIUS authentication is a feature specific to Enterprise-level license "
"holders."
msgstr ""

#: ../../source/social_auth.rst:241
msgid ""
"Ansible Tower can be configured to centrally use RADIUS as a source for "
"authentication information."
msgstr ""

#: ../../source/social_auth.rst:243
msgid ""
"Edit the ``/etc/tower/conf.d/radius.py`` file and enter in the "
"appropriate RADIUS server settings (skipped when RADIUS_SERVER is blank):"
msgstr ""

#: ../../source/social_auth.rst:256
msgid "Using LDAP with Tower"
msgstr ""

#: ../../source/social_auth.rst:264
msgid ""
"LDAP authentication is a feature specific to Enterprise-level license "
"holders."
msgstr ""

#: ../../source/social_auth.rst:267
msgid ""
"Administrators use LDAP as a source for authentication information for "
"Tower users. User authentication is provided, but not the synchronization"
" of user permissions and credentials. Organization membership (as well as"
" the organization admin) and team memberships can be synchronized."
msgstr ""

#: ../../source/social_auth.rst:269
msgid ""
"When so configured, a user who logs in with an LDAP username and password"
" automatically gets a Tower account created for them and they can be "
"automatically placed into organizations as either regular users or "
"organization administrators."
msgstr ""

#: ../../source/social_auth.rst:271
msgid ""
"Users created via an LDAP login cannot change their username, first name,"
" last name, or set a local password for themselves. This is also tunable "
"to restrict editing of other field names."
msgstr ""

#: ../../source/social_auth.rst:273
msgid ""
"LDAP integration for Tower is configured in the file "
"``/etc/tower/conf.d/ldap.py``. No configuration is accessible via the "
"Tower user interface. Review the comments in that file for information on"
" LDAP configuration and contact Ansible via the Red Hat Customer portal "
"at https://access.redhat.com/ if you need further assistance."
msgstr ""

#: ../../source/social_auth.rst:276
msgid ""
"Users of older versions of Tower (prior to Tower version 2.3) should "
"update ``/etc/tower/settings.py`` instead of files within "
"``/etc/tower/conf.d/``."
msgstr ""

#: ../../source/social_auth.rst:282
msgid "Enabling Logging for LDAP"
msgstr ""

#: ../../source/social_auth.rst:288
msgid ""
"To enable logging for LDAP, you must set the level to ``DEBUG`` in the "
"LDAP configuration file, ``/etc/tower/conf/ldap.py``:"
msgstr ""

#: ../../source/social_auth.rst:296
msgid "Organization and Team Mapping"
msgstr ""

#: ../../source/social_auth.rst:304
msgid ""
"Next, you will need to control which users are placed into which Tower "
"organizations based on their username and email address (mapping out your"
" organization admins/users from social or enterprise-level authentication"
" accounts)."
msgstr ""

#: ../../source/social_auth.rst:306
msgid ""
"Dictionary keys are organization names. Organizations will be created, if"
" not already present and if the license allows for multiple "
"organizations. Otherwise, the single default organization is used "
"regardless of the key."
msgstr ""

#: ../../source/social_auth.rst:308
msgid ""
"Values are dictionaries defining the options for each organization's "
"membership.  For each organization, it is possible to specify which users"
" are automatically users of the organization and also which users can "
"administer the organization."
msgstr ""

#: ../../source/social_auth.rst:310
msgid "**admins**: None, True/False, string or list/tuple of strings."
msgstr ""

#: ../../source/social_auth.rst:312
msgid "If None, organization admins will not be updated."
msgstr ""

#: ../../source/social_auth.rst:313
msgid ""
"If True, all users using social authentication will automatically be "
"added as admins of the organization."
msgstr ""

#: ../../source/social_auth.rst:314
msgid ""
"If False, no social authentication users will be automatically added as "
"admins of the organization."
msgstr ""

#: ../../source/social_auth.rst:315
msgid ""
"If a string or list of strings, specifies the usernames and emails for "
"users who will be added to the organization.  Compiled regular "
"expressions may also be used instead of string literals."
msgstr ""

#: ../../source/social_auth.rst:317
msgid "**remove_admins**: True/False. Defaults to True."
msgstr ""

#: ../../source/social_auth.rst:319 ../../source/social_auth.rst:323
#: ../../source/social_auth.rst:327
msgid ""
"When True, a user who does not match is removed from the organization's "
"administrative list."
msgstr ""

#: ../../source/social_auth.rst:321 ../../source/social_auth.rst:364
msgid "**users**: None, True/False, string or list/tuple of strings."
msgstr ""

#: ../../source/social_auth.rst:325
msgid "**remove_users**: True/False. Defaults to True."
msgstr ""

#: ../../source/social_auth.rst:346
msgid ""
"Organization mappings may be specified separately for each social "
"authentication backend.  If defined, these configurations will take "
"precedence over the global configuration above."
msgstr ""

#: ../../source/social_auth.rst:356
msgid ""
"Mapping of team members (users) from social auth accounts. Keys are team "
"names (will be created if not present). Values are dictionaries of "
"options for each team's membership, where each can contain the following "
"parameters:"
msgstr ""

#: ../../source/social_auth.rst:358
msgid ""
"**organization**: string. The name of the organization to which the team "
"belongs.  The team will be created if the combination of organization and"
" team name does not exist.  The organization will first be created if it "
"does not exist.  If the license does not allow for multiple "
"organizations, the team will always be assigned to the single default "
"organization."
msgstr ""

#: ../../source/social_auth.rst:366
msgid "If None, team members will not be updated."
msgstr ""

#: ../../source/social_auth.rst:367
msgid ""
"If True/False, all social auth users will be added/removed as team "
"members."
msgstr ""

#: ../../source/social_auth.rst:368
msgid ""
"If a string or list of strings, specifies expressions used to match "
"users. User will be added as a team member if the username or email "
"matches. Compiled regular expressions may also be used instead of string "
"literals."
msgstr ""

#: ../../source/social_auth.rst:370
msgid ""
"**remove**: True/False. Defaults to True. When True, a user who does not "
"match the rules above is removed from the team."
msgstr ""

#: ../../source/social_auth.rst:387
msgid ""
"Team mappings may be specified separately for each social authentication "
"backend, based on which of these you setup.  When defined, these "
"configurations take precedence over the the global configuration above."
msgstr ""

#: ../../source/social_auth.rst:397
msgid ""
"Uncomment the line below (i.e. set ``SOCIAL_AUTH_USER_FIELDS`` to an "
"empty list) to prevent new user accounts from being created.  Only users "
"who have previously logged in to Tower using social or enterprise-level "
"authentication or have a user account with a matching email address will "
"be able to login."
msgstr ""

