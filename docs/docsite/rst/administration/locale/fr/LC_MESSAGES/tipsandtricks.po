# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Red Hat Inc.
# This file is distributed under the same license as the Ansible Tower
# Administration Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Tower Administration Guide 3.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-08 12:30-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: ../../source/tipsandtricks.rst:7
msgid "Tower Tips and Tricks"
msgstr ""

#: ../../source/tipsandtricks.rst:15
msgid "Using the Tower CLI Tool"
msgstr ""

#: ../../source/tipsandtricks.rst:22
msgid ""
"|at| has a full-featured command line interface. It communicates with "
"Tower via Tower's REST API. You can install it from any machine with "
"access to your Tower machine, or on Tower itself."
msgstr ""

#: ../../source/tipsandtricks.rst:24
msgid "Installation can be done using the ``pip`` command:"
msgstr ""

#: ../../source/tipsandtricks.rst:30
msgid ""
"Refer to :ref:`intro_towercli` and https://github.com/ansible/tower-"
"cli/blob/master/README.rst for configuration and usage instructions."
msgstr ""

#: ../../source/tipsandtricks.rst:34
msgid "Launching a Job Template via the API"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:4
msgid ""
"|at| makes it simple to launch a job based on a Job Template from Tower's"
" API or by using the ``tower-cli`` command line tool."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:6
msgid "Launching a Job Template also:"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:8
msgid "Creates a Job Record"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:9
msgid ""
"Gives that Job Record all of the attributes on the Job Template, combined"
" with certain data you can give in this launch endpoint (\"runtime\" "
"data)"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:10
msgid "Runs Ansible with the combined data from the JT and runtime data"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:12
msgid ""
"Runtime data takes precedence over the Job Template data, contingent on "
"the ``ask_`` ``_on_launch`` field on the job template being set to True. "
"For example, a runtime credential is only accepted if the Job Template "
"has ``ask_credential_on_launch`` set to True."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:14
msgid "Launching from Job Templates via the API follows the following workflow:"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:16
msgid ""
"GET ``https://your.tower.server/api/v1/job_templates/<your job template "
"id>/launch/``. The response will contain data such as "
"``job_template_data`` and ``defaults`` which give information about the "
"job template."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:17
msgid ""
"Inspect returned data for runtime data that is needed to launch. "
"Inspecting the OPTIONS of the launch endpoint may also help deduce what "
"POST fields are allowed."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:20
msgid ""
"Providing certain runtime credentials could introduce the need for a "
"password not listed in ``passwords_needed_to_start``."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:22
msgid "``passwords_needed_to_start``: List of passwords needed"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:23
msgid "``credential_needed_to_start``: Boolean"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:24
msgid "``inventory_needed_to_start``: Boolean"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:25
msgid ""
"``variables_needed_to_start``: List of fields that need to be passed "
"inside of the ``extra_vars`` dictionary"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:27
msgid ""
"Inspect returned data for optionally allowed runtime data that the user "
"should be asked for."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:29
msgid ""
"``ask_variables_on_launch``: Boolean specifying whether to prompt the "
"user for additional variables to pass to Ansible inside of `extra_vars`"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:30
msgid ""
"``ask_tags_on_launch``: Boolean specifying whether to prompt the user for"
" ``job_tags`` on launch (allow allows use of ``skip_tags`` for "
"convienience)"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:31
msgid ""
"``ask_job_type_on_launch``: Boolean specifying whether to prompt the user"
" for ``job_type`` on launch"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:32
msgid ""
"``ask_limit_on_launch``: Boolean specifying whether to prompt the user "
"for ``limit`` on launch"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:33
msgid ""
"``ask_inventory_on_launch``: Boolean specifying whether to prompt the "
"user for the related field ``inventory`` on launch"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:34
msgid ""
"``ask_credential_on_launch``: Boolean specifying whether to prompt the "
"user for the related field ``credential`` on launch"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:35
msgid ""
"``survey_enabled``: Boolean specifying whether to prompt the user for "
"additional ``extra_vars``, following the job template's ``survey_spec`` "
"Q&A format"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:37
msgid ""
"POST ``https://your.tower.server/api/v1/job_templates/<your job template "
"id>/launch/`` with any required data gathered during the previous "
"step(s). The variables that can be passed in the request data for this "
"action include the following."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:39
msgid ""
"``extra_vars``: A string that represents a JSON or YAML formatted "
"dictionary (with escaped parentheses) which includes variables given by "
"the user, including answers to survey questions"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:40
msgid ""
"``job_tags``: A string that represents a comma-separated list of tags in "
"the playbook to run"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:41
msgid ""
"``limit``: A string that represents a comma-separated list of hosts or "
"groups to operate on"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:42
msgid ""
"``inventory``: A integer value for the foreign key of an inventory to use"
" in this job run"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:43
msgid ""
"``credential``: A integer value for the foreign key of a credential to "
"use in this job run"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:45
msgid ""
"The POST will return data about the job and information about whether the"
" runtime data was accepted. The job id is given in the ``job`` field to "
"maintain compatibility with tools written before 3.0. The response will "
"look similar to:"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:59
msgid ""
"In this example, values for ``credential`` and ``job_tags`` were given "
"while the job template ``ask_credential_on_launch`` and "
"``ask_tags_on_launch`` were False. These were rejected because the job "
"template author did not allow using runtime values for them."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:61
msgid ""
"You can see details about the job in this response. To get an updated "
"status, you will need to do a GET request to the job page, ``/jobs/4``, "
"or follow the ``url`` link in the response. You can also find related "
"links to cancel, relaunch, and so fourth."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:67
msgid ""
"When querying a job on a non-execution node, an error message, ``stdout "
"capture is missing`` displays for the result_stdout field and on the "
"related stdout page. In order to generate the stdout, use the "
"``format=txt_download`` query parameter for the related stdout page. This"
" generates the stdout file and any refreshes to either the job or the "
"related std will display the job output."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:72
msgid ""
"You cannot assign a new inventory at the time of launch to a scan job. "
"Scan jobs must be tied to a fixed inventory."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:76
msgid ""
"You cannot change the Job Type at the time of launch to or from the type "
"of \"scan\". The ``ask_job_type_on_launch`` option only enables you to "
"toggle \"run\" versus \"check\" at launch time."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:80
msgid "``tower-cli`` Job Template Launching"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:82
msgid ""
"From the Tower command line, you can use ``tower-cli`` as a method of "
"launching your Job Templates."
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:84
msgid "For help with ``tower-cli`` launch, use:"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:90
msgid "For launching from a job template, invoke tower-cli in a way similar to:"
msgstr ""

#: ../../../common/source/launch_jobtemplate.rst:93
msgid ""
"For an example of how to use the API, you can also add the ``-v``  flag "
"here:"
msgstr ""

#: ../../source/tipsandtricks.rst:40
msgid "Changing the Tower Admin Password"
msgstr ""

#: ../../source/tipsandtricks.rst:48
msgid ""
"During the installation process, you are prompted to enter an "
"administrator password which is used for the ``admin`` superuser/first "
"user created in Tower. If you log into the instance via SSH, it will tell"
" you the default admin password in the prompt. If you need to change this"
" password at any point, run the following command as root on the Tower "
"server:"
msgstr ""

#: ../../source/tipsandtricks.rst:54
msgid ""
"Next, enter a new password. After that, the password you have entered "
"will work as the admin password in the web UI."
msgstr ""

#: ../../source/tipsandtricks.rst:58
msgid "Creating a Tower Admin from the commandline"
msgstr ""

#: ../../source/tipsandtricks.rst:65
msgid ""
"Once in a while you may find it helpful to create an admin (superuser) "
"account from the commandline. To create an admin, run the following "
"command as root on the Tower server and enter in the admin information as"
" prompted:"
msgstr ""

#: ../../source/tipsandtricks.rst:73
msgid "Setting up a jump host to use with Tower"
msgstr ""

#: ../../source/tipsandtricks.rst:81
msgid ""
"Credentials supplied by Tower will not flow to the jump host via "
"ProxyCommand. They are only used for the end-node once the tunneled "
"connection is set up."
msgstr ""

#: ../../source/tipsandtricks.rst:83
msgid ""
"To make this work, configure a fixed user/keyfile in the AWX user's SSH "
"config in the ProxyCommand definition that sets up the connection through"
" the jump host. For example:"
msgstr ""

#: ../../source/tipsandtricks.rst:96
msgid ""
"You must disable PRoot by default if you need to use a jump host. You can"
" disable PRoot by navigating to the ``/etc/tower/settings.py`` file, "
"setting ``AWX_PROOT_ENABLED=False``, then restarting services with the "
"``ansible-tower-service restart`` command."
msgstr ""

#: ../../source/tipsandtricks.rst:100
msgid "View Ansible outputs for JSON commands when using Tower"
msgstr ""

#: ../../source/tipsandtricks.rst:105
msgid ""
"When working with |at|, you can use the API to obtain the Ansible outputs"
" for commands in JSON format."
msgstr ""

#: ../../source/tipsandtricks.rst:107
msgid "To view the Ansible outputs, browse to:"
msgstr ""

#: ../../source/tipsandtricks.rst:115
msgid "Locate and configure the Ansible configuration file"
msgstr ""

#: ../../source/tipsandtricks.rst:123
msgid ""
"While Ansible does not require a configuration file, OS packages often "
"include a default one in ``/etc/ansible/ansible.cfg`` for possible "
"customization. You can also install your own copy in ``~/.ansible.cfg`` "
"or keep a copy in a directory relative to your playbook named as "
"``ansible.cfg``."
msgstr ""

#: ../../source/tipsandtricks.rst:125
msgid ""
"To learn which values you can use in this file, refer to the "
"`configuration file on github`_."
msgstr ""

#: ../../source/tipsandtricks.rst:129
msgid ""
"Using the defaults are acceptable for starting out, but know that you can"
" configure the default module path or connection type here, as well as "
"other things."
msgstr ""

#: ../../source/tipsandtricks.rst:133
msgid "View a listing of all ansible\\_ variables"
msgstr ""

#: ../../source/tipsandtricks.rst:137
msgid ""
"Ansible by default gathers “facts” about the machines under its "
"management, accessible in Playbooks and in templates. To view all facts "
"available about a machine, run the ``setup`` module as an ad hoc action:"
msgstr ""

#: ../../source/tipsandtricks.rst:143
msgid ""
"This prints out a dictionary of all facts available for that particular "
"host. For more information, refer to: "
"https://docs.ansible.com/ansible/playbooks_variables.html#information-"
"discovered-from-systems-facts"
msgstr ""

#: ../../source/tipsandtricks.rst:147
msgid "Using virtualenv with |at|"
msgstr ""

#: ../../../common/source/virtualenv.rst:1
msgid ""
"|at| 3.0 uses *virtualenv*. Virtualenv creates isolated Python "
"environments to avoid problems caused by conflicting dependencies and "
"differing versions. Virtualenv works by simply creating a folder which "
"contains all of the necessary executables and dependencies for a specific"
" version of Python. |at| creates two virtualenvs during installation--one"
" is used to run Tower, while the other is used to run Ansible. This "
"allows Tower to run in a stable environment, while allowing you to add or"
" update modules to your Ansible Python environment as necessary to run "
"your playbooks."
msgstr ""

#: ../../../common/source/virtualenv.rst:3
msgid ""
"For more information on virtualenv, see `Virtual Environments "
"<http://docs.python-guide.org/en/latest/dev/virtualenvs/>`_"
msgstr ""

#: ../../../common/source/virtualenv.rst:6
msgid "Modifying the virtualenv"
msgstr ""

#: ../../../common/source/virtualenv.rst:8
msgid ""
"**Modifying the virtualenv used by Tower is unsupported and not "
"recommended**. Instead, you can add modules to the virtualenv that Tower "
"uses to run Ansible."
msgstr ""

#: ../../../common/source/virtualenv.rst:10
msgid "To do so, activate the Ansible virtualenv::"
msgstr ""

#: ../../../common/source/virtualenv.rst:14
msgid "...and then install whatever you need using ``pip``::"
msgstr ""

#: ../../source/tipsandtricks.rst:157
msgid "Configuring the ``towerhost`` hostname for notifications"
msgstr ""

#: ../../source/tipsandtricks.rst:162
msgid ""
"In ``/etc/tower/settings.py``, you can modify "
"``TOWER_URL_BASE='https://tower.example.com'`` to change the notification"
" hostname, replacing ``https://tower.example.com``  with your preferred "
"hostname.  You must restart Tower services after saving your changes with"
" ``ansible-tower-service restart``."
msgstr ""

#: ../../source/tipsandtricks.rst:164
msgid ""
"Refreshing your Tower license also changes the notification hostname. New"
" installations of |at| 3.0 should not have to set the hostname for "
"notifications."
msgstr ""

#: ../../source/tipsandtricks.rst:170
msgid "Launching Jobs with curl"
msgstr ""

#: ../../source/tipsandtricks.rst:176
msgid ""
"Tower now offers a full-featured command line interface called :ref"
":`tower-cli<api_towercli>` which may be of interest to you if you are "
"considering using ``curl``."
msgstr ""

#: ../../source/tipsandtricks.rst:178
msgid "This method works with Tower versions 2.1.x and newer."
msgstr ""

#: ../../source/tipsandtricks.rst:180
msgid ""
"Launching jobs with the Tower API is simple. Here are some easy to follow"
" examples using the ``curl`` tool."
msgstr ""

#: ../../source/tipsandtricks.rst:182
msgid ""
"Assuming that your Job Template ID is '1', your Tower IP is "
"192.168.42.100, and that ``admin`` and ``awxsecret`` are valid login "
"credentials, you can create a new job this way:"
msgstr ""

#: ../../source/tipsandtricks.rst:190
msgid ""
"This returns a JSON object that you can parse and use to extract the 'id'"
" field, which is the ID of the newly created job."
msgstr ""

#: ../../source/tipsandtricks.rst:192
msgid ""
"You can also pass extra variables to the Job Template call, such as is "
"shown in the following example:"
msgstr ""

#: ../../source/tipsandtricks.rst:201
msgid ""
"You can view the live API documentation by logging into "
"http://192.168.42.100/api/ and browsing around to the various objects "
"available."
msgstr ""

#: ../../source/tipsandtricks.rst:205
msgid ""
"The ``extra_vars`` parameter needs to be a string which contains JSON, "
"not just a JSON dictionary, as you might expect. Use caution when "
"escaping the quotes, etc."
msgstr ""

#: ../../source/tipsandtricks.rst:209
msgid "Dynamic Inventory and private IP addresses"
msgstr ""

#: ../../source/tipsandtricks.rst:215
msgid ""
"By default, Tower only shows instances in a VPC that have an Elastic IP "
"(EIP) address associated with them. To view all of your VPC instances, "
"perform the following steps:"
msgstr ""

#: ../../source/tipsandtricks.rst:217
msgid "In the Tower interface, select your inventory."
msgstr ""

#: ../../source/tipsandtricks.rst:218
msgid ""
"Click on the group that has the Source set to AWS, and click on the "
"Source tab."
msgstr ""

#: ../../source/tipsandtricks.rst:219
msgid ""
"In the \"Source Variables\" box, enter: ``vpc_destination_variable: "
"private_ip_address``"
msgstr ""

#: ../../source/tipsandtricks.rst:221
msgid ""
"Save and trigger an update of the group. You should now be able to see "
"all of your VPC instances."
msgstr ""

#: ../../source/tipsandtricks.rst:225
msgid ""
"Tower must be running inside the VPC with access to those instances in "
"order to usefully configure them."
msgstr ""

#: ../../source/tipsandtricks.rst:229
msgid "Filtering instances returned by the dynamic inventory sources in Tower"
msgstr ""

#: ../../source/tipsandtricks.rst:236
msgid ""
"By default, the dynamic inventory sources in Tower (AWS, Rackspace, etc) "
"return all instances available to the cloud credentials being used. They "
"are automatically joined into groups based on various attributes. For "
"example, AWS instances are grouped by region, by tag name and value, by "
"security groups, etc. To target specific instances in your environment, "
"write your playbooks so that they target the generated group names. For "
"example:"
msgstr ""

#: ../../source/tipsandtricks.rst:245
msgid ""
"You can also use the ``Limit`` field in the Job Template settings to "
"limit a playbook run to a certain group, groups, hosts, or a combination "
"thereof. The syntax is the same as the ``--limit parameter`` on the "
"ansible-playbook command line."
msgstr ""

#: ../../source/tipsandtricks.rst:248
msgid ""
"You may also create your own groups by copying the auto-generated groups "
"into your custom groups. Make sure that the ``Overwrite`` option is "
"disabled on your dynamic inventory source, otherwise subsequent "
"synchronization operations will delete and replace your custom groups."
msgstr ""

#: ../../source/tipsandtricks.rst:252
msgid "Using an unreleased module from Ansible source with Tower"
msgstr ""

#: ../../source/tipsandtricks.rst:258
msgid ""
"If there is a feature that is available in the latest Ansible core branch"
" that you would like to leverage with your Tower system, making use of it"
" in Tower is fairly simple."
msgstr ""

#: ../../source/tipsandtricks.rst:260
msgid ""
"First, determine which is the updated module you want to use from the "
"available Ansible Core Modules or Ansible Extra Modules GitHub "
"repositories."
msgstr ""

#: ../../source/tipsandtricks.rst:262
msgid ""
"Next, create a new directory, at the same directory level of your Ansible"
" source playbooks, named ``/library``."
msgstr ""

#: ../../source/tipsandtricks.rst:264
msgid ""
"Once this is created, copy the module you want to use and drop it into "
"the ``/library`` directory--it will be consumed first over your system "
"modules and can be removed once you have updated the the stable version "
"via your normal package manager."
msgstr ""

#: ../../source/tipsandtricks.rst:268
msgid "Using callback plugins with Tower"
msgstr ""

#: ../../source/tipsandtricks.rst:274
msgid ""
"Ansible has a flexible method of handling actions during playbook runs, "
"called callback plugins. You can use these plugins with Tower to do "
"things like notify services upon playbook runs or failures, send emails "
"after every playbook run, etc. For official documentation on the callback"
" plugin architecture, refer to: "
"http://docs.ansible.com/developing_plugins.html#callbacks"
msgstr ""

#: ../../source/tipsandtricks.rst:276
msgid ""
"You may also want to review some example plugins, which should be "
"modified for site-specific purposes, such as those available at: "
"https://github.com/ansible/ansible/tree/devel/lib/ansible/plugins/callback"
msgstr ""

#: ../../source/tipsandtricks.rst:279
msgid ""
"To use these plugins, put the callback plugin ``.py`` file into a "
"directory called ``/callback_plugins`` alongside your playbook in your "
"Tower Project."
msgstr ""

#: ../../source/tipsandtricks.rst:282
msgid ""
"To make callbacks apply to every playbook, independent of any projects, "
"put the plugins ``.py`` file in one of the following directories "
"(depending on your particular Linux distribution and method of Ansible "
"installation):"
msgstr ""

#: ../../source/tipsandtricks.rst:294
msgid ""
"To have most callbacks shipped with Ansible applied globally, you must "
"add them to the ``callback_whitelist`` section of your ``ansible.cfg``."
msgstr ""

#: ../../source/tipsandtricks.rst:298
msgid "Connecting to Windows with winrm"
msgstr ""

#: ../../source/tipsandtricks.rst:304
msgid ""
"By default Tower attempts to ``ssh`` to hosts. You must add the ``winrm``"
" connection info to the group variables to which the Windows hosts "
"belong.  To get started, edit the Windows group in which the hosts reside"
" and place the variables in the source/edit screen for the group."
msgstr ""

#: ../../source/tipsandtricks.rst:306
msgid "To add ``winrm`` connection info:"
msgstr ""

#: ../../source/tipsandtricks.rst:308
msgid ""
"Edit the properties for the selected group by clicking on the |edit| "
"button to the right of the group name that contains the Windows servers."
"  In the \"variables\" section, add your connection information as such: "
"``ansible_connection: winrm``"
msgstr ""

#: ../../source/tipsandtricks.rst:310
msgid ""
"Once done, save your edits. If Ansible was previously attempting an SSH "
"connection and failed, you should re-run the job template."
msgstr ""

#: ../../source/tipsandtricks.rst:316
msgid "Importing existing inventory files and host/group vars into Tower"
msgstr ""

#: ../../source/tipsandtricks.rst:325
msgid ""
"To import an existing static inventory and the accompanying host and "
"group vars into Tower, your inventory should be in a structure that looks"
" similar to the following:"
msgstr ""

#: ../../source/tipsandtricks.rst:336
msgid "To import these hosts and vars, run the ``tower-manage`` command:"
msgstr ""

#: ../../source/tipsandtricks.rst:343
msgid ""
"If you only have a single flat file of inventory, a file called ansible-"
"hosts, for example, import it like the following:"
msgstr ""

#: ../../source/tipsandtricks.rst:350
msgid ""
"In case of conflicts or to overwrite an inventory named \"My Tower "
"Inventory\", run:"
msgstr ""

#: ../../source/tipsandtricks.rst:358
msgid "If you receive an error, such as:"
msgstr ""

#: ../../source/tipsandtricks.rst:364
msgid ""
"Your inventory file is most likely in \"[groupname:vars]\" structure.  At"
" this time, the inventory importer tool does not support this format. For"
" each of the groups that has vars attached, move those groups into a "
"group_vars file."
msgstr ""

#: ../../source/tipsandtricks.rst:367
msgid "Create a directory to hold the hosts file, as well as the group_vars:"
msgstr ""

#: ../../source/tipsandtricks.rst:374
msgid ""
"Then, for each of the groups that have :vars listed, create a file called"
" ``inventory-directory/group_vars/<groupname>`` and format the variables "
"in YAML format."
msgstr ""

#: ../../source/tipsandtricks.rst:376
msgid "Once broken out, the importer will handle the conversion correctly."
msgstr ""

