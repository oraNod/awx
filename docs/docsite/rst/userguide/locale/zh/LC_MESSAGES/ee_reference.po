# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Red Hat Inc.
# This file is distributed under the same license as the Automation Controller User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Automation Controller User Guide 4.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-04 09:32+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/ee_reference.rst:3
msgid "Execution Environment Setup Reference"
msgstr "执行环境设置参考"

#: ../../source/ee_reference.rst:5
msgid "This section contains reference information associated with setting up and building |ees|."
msgstr "本节包含与设置和构建 |ees| 相关的参考信息。"

#: ../../source/ee_reference.rst:11
msgid "Execution environment definition"
msgstr "执行环境定义"

#: ../../source/ee_reference.rst:13
msgid "A definition file is a ``.yml`` file that is required to build an image for an |ee|. An example of an |ee| definition schema is as follows:"
msgstr "定义文件是为 |ee| 构建镜像所需的 ``.yml`` 文件。|ee| 定义架构示例如下："

#: ../../source/ee_reference.rst:41
msgid "Build arguments and base image"
msgstr "构建参数和基础镜像"

#: ../../source/ee_reference.rst:43
msgid "Default values for build arguments can be specified in the definition file in the ``default_build_args`` section as a dictionary. This is an alternative to using the ``--build-arg`` CLI flag."
msgstr "构建参数的默认值可以作为字典在 ``default_build_args`` 部分中的定义文件中指定。这是使用 ``--build-arg`` CLI 标志的替代选择。"

#: ../../source/ee_reference.rst:45
msgid "Build arguments used by ``ansible-builder`` are the following:"
msgstr "``ansible-builder`` 使用的构建参数如下："

#: ../../source/ee_reference.rst:47
msgid "``ANSIBLE_GALAXY_CLI_COLLECTION_OPTS`` allows the user to pass the ``–pre`` flag to enable the installation of pre-releases collections."
msgstr "``ANSIBLE_GALAXY_CLI_COLLECTION_OPTS`` 允许用户传递 ``–pre`` 标记来启用预发布集合的安装。"

#: ../../source/ee_reference.rst:49
msgid "``EE_BASE_IMAGE`` specifies the parent image for the |ee|."
msgstr "``EE_BASE_IMAGE`` 指定 |ee| 的父镜像。"

#: ../../source/ee_reference.rst:51
msgid "``EE_BUILDER_IMAGE`` specifies the image used for compiling type tasks."
msgstr "``EE_BUILDER_IMAGE`` 指定用于编译类型任务的镜像。"

#: ../../source/ee_reference.rst:53
msgid "Values given inside of ``default_build_args`` will be hard-coded into the Containerfile, so they will persist if ``podman build`` is called manually."
msgstr "``default_build_args`` 内部给出的值将硬编码到 Containerfile 中，因此如果手动调用 ``podman build``，这些值将被保留。"

#: ../../source/ee_reference.rst:55
msgid "If the same variable is specified in the CLI ``--build-arg`` flag, the CLI value will take higher precedence."
msgstr "如果在 CLI ``--build-arg`` 标志中指定同一变量，CLI 值将具有更高的优先级。"

#: ../../source/ee_reference.rst:59
msgid "Ansible config file path"
msgstr "Ansible 配置文件路径"

#: ../../source/ee_reference.rst:61
msgid "When using an ``ansible.cfg`` file to pass a token and other settings for a private account to an |ah| server, listing the config file path here (as a string) will enable it to be included as a build argument in the initial phase of the build."
msgstr "当使用 ``ansible.cfg`` 文件将私有帐户的令牌和其他设置传递给 |ah| 服务器时，在此列出配置文件路径（作为字符串）将启用它作为构建初始阶段的构建参数。"

#: ../../source/ee_reference.rst:65
msgid "Ansible Galaxy dependencies"
msgstr "Ansible Galaxy 依赖项"

#: ../../source/ee_reference.rst:67
msgid "The ``galaxy`` entry points to a valid requirements file for the ``ansible-galaxy collection install -r ...`` command."
msgstr "``galaxy`` 条目指向 ``ansible-galaxy collection install -r ...`` 命令的有效要求文件。"

#: ../../source/ee_reference.rst:69
msgid "The entry ``requirements.yml`` may be a relative path from the directory of the |ee| definition’s folder, or an absolute path."
msgstr "条目 ``requirements.yml`` 可以是 |ee| 定义文件夹的目录的相对路径，也可以是绝对路径。"

#: ../../source/ee_reference.rst:73
msgid "Python dependencies"
msgstr "Python 依赖项"

#: ../../source/ee_reference.rst:75
msgid "The python entry points to a valid requirements file for the ``pip install -r ...`` command."
msgstr "python 条目指向 ``pip install -r ...`` 命令的有效要求文件。"

#: ../../source/ee_reference.rst:77
msgid "The entry ``requirements.txt`` may be a relative path from the directory of the |ee| definition’s folder, or an absolute path."
msgstr "条目 ``requirements.txt`` 可以是 |ee| 定义文件夹的目录的相对路径，也可以是绝对路径。"

#: ../../source/ee_reference.rst:81
msgid "System-level dependencies"
msgstr "系统级依赖项"

#: ../../source/ee_reference.rst:83
msgid "The ``system`` entry points to a ``bindep`` requirements file. This will be processed by ``bindep`` and then passed to ``dnf``, other platforms are not yet supported. For more information about bindep, refer to the `OpenDev documentation <https://docs.opendev.org/opendev/bindep/latest/readme.html>`_."
msgstr "``system`` 条目指向一个 ``bindep`` 要求文件。这由 ``bindep`` 处理，然后传递到 ``dnf``，其他平台尚不受支持。有关 bindep 的更多信息，请参阅 `OpenDev documentation <https://docs.opendev.org/opendev/bindep/latest/readme.html>`_。"

#: ../../source/ee_reference.rst:87
msgid "Additional custom build steps"
msgstr "额外的自定义构建步骤"

#: ../../source/ee_reference.rst:89
msgid "Additional commands may be specified in the ``additional_build_steps`` section, either for before the main build steps (``prepend``) or after (``append``). The syntax needs to be one of the following:"
msgstr "其他命令可以在 ``additional_build_steps`` 部分中指定，可在主要构建步骤之前（``prepend``），或之后（``append``）指定。语法需要是以下之一："

#: ../../source/ee_reference.rst:91
msgid "a multi-line string (example shown in the ``prepend`` section above)"
msgstr "一个多行字符串（例如，上面的 ``prepend`` 部分显示）"

#: ../../source/ee_reference.rst:92
msgid "a dictionary (as shown via ``append``)"
msgstr "一个字典（经过 ``append`` 显示）"

#: ../../source/ee_reference.rst:95
msgid "ansible-builder build options"
msgstr "ansible-builder 构建选项"

#: ../../source/ee_reference.rst:97
msgid "The following options can be used with the ``ansible-builder build`` command:"
msgstr "以下选项可与 ``ansible-builder build`` 命令一起使用："

#: ../../source/ee_reference.rst:103
msgid "Flag"
msgstr "标记"

#: ../../source/ee_reference.rst:104
msgid "Syntax"
msgstr "语法"

#: ../../source/ee_reference.rst:105
msgid "Description"
msgstr "描述"

#: ../../source/ee_reference.rst:106
msgid "``--tag``"
msgstr "``--tag``"

#: ../../source/ee_reference.rst:107
msgid "``$ ansible-builder build --tag=my-custom-ee``"
msgstr "``$ ansible-builder build --tag=my-custom-ee``"

#: ../../source/ee_reference.rst:108
msgid "To customize the tagged name applied to the built image."
msgstr "自定义要应用到构建的镜像的带标签的名称。"

#: ../../source/ee_reference.rst:109
msgid "``--file``"
msgstr "``--file``"

#: ../../source/ee_reference.rst:110
msgid "``$ ansible-builder build --file=my-ee.yml``"
msgstr "``$ ansible-builder build --file=my-ee.yml``"

#: ../../source/ee_reference.rst:111
msgid "To use a definition file named something other than ``execution-environment.yml``."
msgstr "使用一个名称不是 ``execution-environment.yml`` 的定义文件。"

#: ../../source/ee_reference.rst:112
msgid "``--context``"
msgstr "``--context``"

#: ../../source/ee_reference.rst:113
msgid "``$ ansible-builder build --context=/path/to/dir``"
msgstr "``$ ansible-builder build --context=/path/to/dir``"

#: ../../source/ee_reference.rst:114
msgid "To specify a location other than the default directory named ``context`` created in the current working directory."
msgstr "指定在当前工作目录中创建的名为 ``context`` 的默认目录以外的位置。"

#: ../../source/ee_reference.rst:115
#: ../../source/ee_reference.rst:118
msgid "``--build-arg``"
msgstr "``--build-arg``"

#: ../../source/ee_reference.rst:116
msgid "``$ ansible-builder build --build-arg FOO=bar``"
msgstr "``$ ansible-builder build --build-arg FOO=bar``"

#: ../../source/ee_reference.rst:117
msgid "To use Podman or Docker build-time variables, specify them the same way you would with ``podman build`` or ``docker build``. By default, the Containerfile or Dockerfile contains a build argument ``EE_BASE_IMAGE,`` that lets you rebuild without modifying files."
msgstr "要使用 Podman 或 Docker 的构建时变量，请使用与 ``podman build`` 或 ``docker build`` 相同的方式指定。默认情况下，Containerfile 或 Dockerfile 包含一个构建参数 ``EE_BASE_IMAGE,``，可让您在不修改文件的情况下重建。"

#: ../../source/ee_reference.rst:119
msgid "``$ ansible-builder build --build-arg EE_BASE_IMAGE=registry.example.com/another-ee``"
msgstr "``$ ansible-builder build --build-arg EE_BASE_IMAGE=registry.example.com/another-ee``"

#: ../../source/ee_reference.rst:120
msgid "To use a custom base image, replaces previously discontinued ``--base-image`` option."
msgstr "使用一个自定义基础镜像，替换之前停用的 ``--base-image`` 选项。"

#: ../../source/ee_reference.rst:121
msgid "``--container-runtime``"
msgstr "``--container-runtime``"

#: ../../source/ee_reference.rst:122
msgid "``$ ansible-builder build --container-runtime=docker``"
msgstr "``$ ansible-builder build --container-runtime=docker``"

#: ../../source/ee_reference.rst:123
msgid "To use Docker to build images instead of the Podman default."
msgstr "使用 Docker 而不是默认的 Podman 构建镜像。"

#: ../../source/ee_reference.rst:124
msgid "``--verbosity``"
msgstr "``--verbosity``"

#: ../../source/ee_reference.rst:125
msgid "``$ ansible-builder build --verbosity 2``"
msgstr "``$ ansible-builder build --verbosity 2``"

#: ../../source/ee_reference.rst:126
msgid "To customize the level of verbosity."
msgstr "自定义详细程度。"

#: ../../source/ee_reference.rst:129
msgid "Examples"
msgstr "示例"

#: ../../source/ee_reference.rst:130
msgid "The example in ``test/data/pytz`` requires the ``awx.awx`` collection in the |ee| definition. The lookup plugin ``awx.awx.tower_schedule_rrule`` requires the PyPI ``pytz`` and another library to work. If ``test/data/pytz/execution-environment.yml`` file is provided to the ``ansible-builder build`` command, then it will install the collection inside the image, read the ``requirements.txt`` file inside of the collection, and then install ``pytz`` into the image."
msgstr "``test/data/pytz`` 中的示例需要 |ee| 定义中的 ``awx.awx`` 集合。查找插件 ``awx.awx.tower_schedule_rrule`` 需要 PyPI ``pytz`` 和另一个库才能正常工作。如果为 ``ansible-builder build`` 命令提供了 ``test/data/pytz/execution-environment.yml`` 文件，那么它将在镜像中安装集合，读取集合中的 ``requirements.txt`` 文件，然后将 ``pytz`` 安装到镜像中。"

#: ../../source/ee_reference.rst:132
msgid "The image produced can be used inside of an ``ansible-runner`` project by placing these variables inside the ``env/settings`` file, inside of the private data directory."
msgstr "生成的镜像可以通过将这些变量放在专用数据目录的 ``env/settings`` 文件中来使用 ``ansible-runner`` 项目。"

#: ../../source/ee_reference.rst:141
msgid "The ``awx.awx`` collection is a subset of content included in the default AWX |ee|. More details can be found in the `awx-ee repository <https://github.com/ansible/awx-ee>`_."
msgstr "``awx.awx`` 集合是默认 AWX |ee| 中包含的内容子集。更多详情可在 `awx-ee repository <https://github.com/ansible/awx-ee>`_ 中找到。"

#: ../../source/ee_reference.rst:150
msgid "Collection-level metadata"
msgstr "集合一级的元数据"

#: ../../source/ee_reference.rst:152
msgid "Collections inside of the ``galaxy`` entry of an |ee| will contribute their Python and system requirements to the image."
msgstr "一个 |ee| 条目的 ``galaxy`` 条目中的集合将为镜像提供它们的 Python 和系统要求。"

#: ../../source/ee_reference.rst:154
msgid "Requirements from a collection can be recognized in these ways:"
msgstr "可以通过以下方式识别集合中的要求："

#: ../../source/ee_reference.rst:156
msgid "A file ``meta/execution-environment.yml`` references the Python and/or bindep requirements files"
msgstr "``meta/execution-environment.yml`` 文件引用 Python 和/或 bindep 要求文件"

#: ../../source/ee_reference.rst:157
msgid "A file named ``requirements.txt`` is in the root level of the collection"
msgstr "名为 ``requirements.txt`` 的文件处于集合的根级别"

#: ../../source/ee_reference.rst:158
msgid "A file named ``bindep.txt`` is in the root level of the collection"
msgstr "名为 ``bindep.txt`` 的文件处于集合的根级别"

#: ../../source/ee_reference.rst:160
msgid "If any of these files are in the ``build_ignore`` of the collection, it will not work correctly."
msgstr "如果有任何文件位于集合的 ``build_ignore`` 中，则无法正常工作。"

#: ../../source/ee_reference.rst:162
msgid "Collection maintainers can verify that ansible-builder recognizes the requirements they expect by using the ``introspect`` command, for example:"
msgstr "集合维护者可以使用 ``introspect`` 命令来验证 ansible-builder 是否可以识别他们所期望的要求，例如："

#: ../../source/ee_reference.rst:169
msgid "Python Dependencies"
msgstr "Python 依赖项"

#: ../../source/ee_reference.rst:171
msgid "Python requirements files are combined into a single file using the ``requirements-parser`` library in order to support complex syntax like references to other files."
msgstr "Python 要求文件使用 ``requirements-parser`` 库合并到一个文件中，以支持复杂的语法，如引用其他文件。"

#: ../../source/ee_reference.rst:173
msgid "Entries from separate collections that give the same package name will be combined into the same entry, with the constraints combined."
msgstr "提供相同软件包名称的独立集合中的条目将合并到同一条目中，限制合并在一起。"

#: ../../source/ee_reference.rst:175
msgid "There are several package names which are specifically *ignored* by ansible-builder, meaning that if a collection lists these, they will not be included in the combined file. These include test packages and packages that provide Ansible itself. The full list can be found in ``EXCLUDE_REQUIREMENTS`` in the ``ansible_builder.requirements`` module."
msgstr "有几个软件包名称会被 ansible-builder 特别*忽略*，这意味着如果集合列表包括了它们，它们将不会包括在组合的文件中。这些软件包包括测试软件包以及提供 Ansible 本身的软件包。完整的列表可在 ``ansible_builder.requirements`` 模块的 ``EXCLUDE_REQUIREMENTS`` 中找到。"

#: ../../source/ee_reference.rst:179
msgid "System-level Dependencies"
msgstr "系统级依赖项"

#: ../../source/ee_reference.rst:181
msgid "The ``bindep`` format provides a way of specifying cross-platform requirements. A minimum expectation is that collections specify necessary requirements for ``[platform:rpm]``."
msgstr "``bindep`` 格式提供了一种指定跨平台要求的方法。最低预期是，集合指定了 ``[platform:rpm]`` 的必要要求。"

#: ../../source/ee_reference.rst:183
msgid "Entries from multiple collections will be combined into a single file. Only requirements with no profiles (runtime requirements) will be installed to the image. Entries from multiple collections which are outright duplicates of each other may be consolidated in the combined file."
msgstr "多个集合中的条目将合并到一个文件中。只有无配置文件（运行时要求）的要求才会安装到镜像中。对多个集合的尝试可以合并到合并文件中。"

