# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Red Hat Inc.
# This file is distributed under the same license as the Automation Controller User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Automation Controller User Guide 4.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-04 09:32+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/credential_types.rst:4
msgid "Custom Credential Types"
msgstr "自定义凭证类型"

#: ../../source/credential_types.rst:9
msgid "As an administrator with superuser access, you can define a custom credential type in a standard format using a YAML/JSON-like definition, allowing the assignment of new credential types to jobs and inventory updates. This allows you to define a custom credential type that works in ways similar to existing credential types. For example, you could create a custom credential type that injects an API token for a third-party web service into an environment variable, which your playbook or custom inventory script could consume."
msgstr "作为具有超级用户访问权限的管理员，您可以使用类似于 YAML/JSON 定义，以标准格式定义自定义凭证类型，允许将新凭证类型分配给作业和清单更新。这样，您可以定义一个与现有凭证类型原理相似的自定义凭证类型。例如，您可以创建一个自定义凭证类型，将第三方 Web 服务的 API 令牌注入环境变量，以供 playbook 或清单脚本使用。"

#: ../../source/credential_types.rst:11
msgid "Custom credentials support the following ways of injecting their authentication information:"
msgstr "自定义凭证支持以下注入身份验证信息的方法："

#: ../../source/credential_types.rst:13
msgid "Environment variables"
msgstr "环境变量"

#: ../../source/credential_types.rst:14
msgid "Ansible extra variables"
msgstr "Ansible 额外变量"

#: ../../source/credential_types.rst:15
msgid "File-based templating (i.e., generating ``.ini`` or ``.conf`` files that contain credential values)"
msgstr "基于文件的模板（例如生成包含凭证值的 ``.ini`` 或 ``.conf`` 文件）"

#: ../../source/credential_types.rst:17
msgid "You can attach one SSH and multiple cloud credentials to a Job Template. Each cloud credential must be of a different type. In other words, only one AWS credential, one GCE credential, etc., are allowed. Vault credentials and machine credentials are separate entities."
msgstr "您可以为作业模板附加一个 SSH 和多个云凭证。每个云凭证必须是不同的类型。换句话说，只允许使用一个 AWS 凭证、一个 GCE 凭证等。Vault 凭证和机器凭证是单独的实体。"

#: ../../source/credential_types.rst:21
msgid "When creating a new credential type, you are responsible for avoiding collisions in the ``extra_vars``, ``env``, and file namespaces. Also, avoid environment variable or extra variable names that start with ``ANSIBLE_`` because they are reserved. You must have Superuser permissions to be able to create and edit a credential type (``CredentialType``) and to be able to view the ``CredentialType.injection`` field."
msgstr "在创建新凭证类型时，您需要避免在 ``extra_vars``、``env`` 和文件命名空间中发生冲突。另外，还需避免使用以 ``ANSIBLE_`` 开头的环境变量或额外变量名称，因为它们是保留的。您必须具有 Superuser 权限才能创建和编辑凭证类型 (``CredentialType``)，以及查看 ``CredentialType.injection`` 字段。"

#: ../../source/credential_types.rst:25
msgid "Content sourcing from collections"
msgstr "从集合中获取内容"

#: ../../source/credential_types.rst:27
msgid "A \"managed\" credential type of ``kind=galaxy`` represents a content source for fetching collections defined in ``requirements.yml`` when project updates are run (e.g., galaxy.ansible.com, cloud.redhat.com, on-premise Automation Hub). This new type will represent a URL and (optional) authentication details necessary to construct the environment variables when a project update runs ``ansible-galaxy collection install`` as described in the Ansible documentation, `Configuring the ansible-galaxy client <https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#configuring-the-ansible-galaxy-client>`_. It has fields which map directly to the configuration options exposed to the Ansible Galaxy CLI, e.g., per-server. An endpoint in the API reflects an ordered list of these credentials at the Organization level:"
msgstr "一个\"受管\"凭证类型 ``kind=galaxy`` 表示在运行项目更新时（例如 galaxy.ansible.com、cloud.redhat.com、内部 Automation Hub）在 ``requirements.yml`` 中定义的获取集合的内容源。 这个新类型将代表 URL 和（可选）在项目更新运行 ``ansible-galaxy collection install`` 时构建环境变量所需的身份验证详情，如 Ansible 文档所述（`Configuring the ansible-galaxy client <https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#configuring-the-ansible-galaxy-client>`_）。它有字段直接映射到提供给 Ansible Galaxy CLI 的配置选项，例如，每个服务器。 API 中的端点在机构级别反映了这些凭证的有序列表："

#: ../../source/credential_types.rst:33
msgid "Installations of the |at| migrates existing Galaxy-oriented setting values in such a way that post-upgrade, proper credentials are created and attached to every Organization. After upgrading to the latest version , every organization that existed prior to upgrade now has a list of (one or more) \"Galaxy\" credentials associated with it."
msgstr "|at| 安装会迁移面向 Galaxy 的现有的设置值，在升级后，会创建正确的凭证并附加到每个机构中。在升级到最新版本后，在升级前存在的每一个机构都会有一个与其关联的\"Galaxy\"凭证列表。"

#: ../../source/credential_types.rst:35
msgid "Additionally, post-upgrade, these settings are not be visible (or editable) from the ``/api/v2/settings/jobs/`` endpoint."
msgstr "另外，这些设置在升级后无法通过 ``/api/v2/settings/jobs/`` 端点查看（或进行编辑）。"

#: ../../source/credential_types.rst:37
msgid "The |at| should still continue to fetch roles directly from public Galaxy even if galaxy.ansible.com is not the first credential in the list for the Organization. The global \"Galaxy\" settings are no longer configured at the jobs level, but at the Organization level in the User Interface. The Organization's Add and Edit windows have an optional **Credential** lookup field for credentials of ``kind=galaxy``."
msgstr "即使 galaxy.ansible.com 不是机构凭证列表中的第一个凭证，|at| 仍会继续直接从公共 Galaxy 获取角色。 全局 \"Galaxy\" 设置将不再会在作业级别进行配置，而是在 Tower 用户界面中的机构级别进行配置。 机构的添加和编辑窗口中带有一个可选的 **Credential** 查找字段，用于 ``kind=galaxy`` 的凭证。"

#: ../../source/credential_types.rst:41
msgid "It is very important to specify the order of these credentials as order sets precedence for the sync and lookup of the content. For more information, see :ref:`ug_organizations_create`. For detail on how to set up a project using collections, see :ref:`ug_collections_usage`."
msgstr "将这些凭证的顺序指定为内容同步和查询的顺序非常重要。如需了解更多信息，请参阅 :ref:`ug_organizations_create`。有关如何使用集合设置项目的详情，请参阅 :ref:`ug_collections_usage`。"

#: ../../source/credential_types.rst:47
msgid "Backwards-Compatible API Considerations"
msgstr "后向兼容 API 注意事项"

#: ../../source/credential_types.rst:52
msgid "Support for version 2 of the API (``api/v2/``) means a one-to-many relationship for Job Templates to credentials (including multi-cloud support). Credentials can be filtered using the v2 API:"
msgstr "支持 API 版本 2（``api/v2/``）意味着，作业模板与凭证有一对多的关系（包括多云支持）。凭证可以使用 v2 API 进行过滤："

#: ../../source/credential_types.rst:59
msgid "In the V2 CredentialType model, the relationships are defined as follows:"
msgstr "在 V2 CredentialType 模型中，关系定义如下："

#: ../../source/credential_types.rst:62
msgid "Machine"
msgstr "机器"

#: ../../source/credential_types.rst:62
msgid "SSH"
msgstr "SSH"

#: ../../source/credential_types.rst:64
#: ../../source/credential_types.rst:64
msgid "Vault"
msgstr "Vault"

#: ../../source/credential_types.rst:66
msgid "Network"
msgstr "网络"

#: ../../source/credential_types.rst:66
msgid "Sets environment variables (e.g., ``ANSIBLE_NET_AUTHORIZE``)"
msgstr "设置环境变量（例如 ``ANSIBLE_NET_AUTHORIZE``）"

#: ../../source/credential_types.rst:68
msgid "SCM"
msgstr "SCM"

#: ../../source/credential_types.rst:68
msgid "Source Control"
msgstr "源控制"

#: ../../source/credential_types.rst:70
msgid "Cloud"
msgstr "云"

#: ../../source/credential_types.rst:70
msgid "EC2, AWS"
msgstr "EC2、AWS"

#: ../../source/credential_types.rst:72
msgid "Lots of others"
msgstr "很多其他服务"

#: ../../source/credential_types.rst:74
#: ../../source/credential_types.rst:74
msgid "Insights"
msgstr "Insights"

#: ../../source/credential_types.rst:76
msgid "Galaxy"
msgstr "Galaxy"

#: ../../source/credential_types.rst:76
msgid "galaxy.ansible.com, cloud.redhat.com"
msgstr "galaxy.ansible.com, cloud.redhat.com"

#: ../../source/credential_types.rst:78
msgid "on-premise Automation Hub"
msgstr "内部 Automation Hub"

#: ../../source/credential_types.rst:84
msgid "Content verification"
msgstr "内容验证"

#: ../../source/credential_types.rst:86
msgid "|At| uses GNU Privacy Guard (GPG) to verify content. For more information, refer to `The GNU Privacy Handbook <https://www.gnupg.org/gph/en/manual/c14.html#:~:text=GnuPG%20uses%20public%2Dkey%20cryptography,the%20user%20wants%20to%20communicate>`_."
msgstr "|At| 使用 GNU Privacy Guard (GPG)验证内容。如需更多信息，请参阅 `The GNU Privacy Handbook <https://www.gnupg.org/gph/en/manual/c14.html#:~:text=GnuPG%20uses%20public%2Dkey%20cryptography,the%20user%20wants%20to%20communicate>`_。"

#: ../../source/credential_types.rst:92
msgid "Getting Started with Credential Types"
msgstr "凭证类型入门"

#: ../../source/credential_types.rst:97
msgid "Access the Credentials from clicking **Credential Types** from the left navigation bar. If no custom credential types have been created, the Credential Types view will not have any to display and will prompt you to add one:"
msgstr "点左侧导航栏中的 **Credential Types** 访问 Credentials。如果没有创建自定义凭证类型，Credential Types 视图将不会显示任何自定义凭证类型，并会提示您添加一个："

#: ../../source/credential_types.rst:99
msgid "|Credential Types - home empty|"
msgstr "|Credential Types - home empty|"

#: ../../source/credential_types.rst:104
msgid "If credential types have been created, this page displays a list of all existing and available Credential Types."
msgstr "如果创建了凭证类型，本页会显示所有现有和可用凭证类型的列表。"

#: ../../source/credential_types.rst:106
msgid "|Credential Types - home with example credential types|"
msgstr "|Credential Types - home with example credential types|"

#: ../../source/credential_types.rst:110
msgid "To view more information about a credential type, click on its name or the Edit (|edit|) button from the **Actions** column."
msgstr "要查看有关凭证类型的更多信息，请点击其名称或 **Actions** 栏中的编辑 (|edit|) 按钮。"

#: ../../source/credential_types.rst:114
msgid "Each credential type displays its own unique configurations in the **Input Configuration** field and the **Injector Configuration** field, if applicable. Both YAML and JSON formats are supported in the configuration fields."
msgstr "如果适用，每个凭证类型都会在 **Input Configuration** 字段和 **Injector Configuration** 字段显示自己的唯一配置。配置字段中支持 YAML 和 JSON 两种格式。"

#: ../../source/credential_types.rst:118
msgid "Create a New Credential Type"
msgstr "创建新凭证类型"

#: ../../source/credential_types.rst:123
msgid "To create a new credential type:"
msgstr "要创建新凭证类型，请执行以下操作："

#: ../../source/credential_types.rst:125
msgid "Click the **Add** button in the **Credential Types** screen."
msgstr "点 **Credential Types** 屏幕中的 **Add** 按钮。"

#: ../../source/credential_types.rst:127
msgid "|Create new credential type|"
msgstr "|Create new credential type|"

#: ../../source/credential_types.rst:131
msgid "Enter the appropriate details in the **Name** and **Description** field."
msgstr "在 **Name** 和 **Description** 字段中输入正确的详情。"

#: ../../source/credential_types.rst:135
msgid "When creating a new credential type, do not use reserved variable names that start with ``ANSIBLE_`` for the **INPUT** and **INJECTOR** names and IDs, as they are invalid for custom credential types."
msgstr "在创建新凭证类型时，请不要为 **INPUT** 和 **INJECTOR** 名称和 ID 使用以 ``ANSIBLE_`` 开头的保留变量名称，因为它们对于自定义凭证类型无效。"

#: ../../source/credential_types.rst:137
msgid "In the **Input Configuration** field, specify an input schema which defines a set of ordered fields for that type. The format can be in YAML or JSON, as shown:"
msgstr "在 **Input Configuration** 字段中，指定为该类型定义一组排序字段的输入 schema。格式可以是 YAML 或 JSON，如下所示："

#: ../../source/credential_types.rst:139
msgid "**YAML**"
msgstr "**YAML**"

#: ../../source/credential_types.rst:155
msgid "View more YAML examples at `<http://www.yaml.org/start.html>`_."
msgstr "要查看更多 YAML 示例，请访问 `<http://www.yaml.org/start.html>`_。"

#: ../../source/credential_types.rst:157
msgid "**JSON**"
msgstr "**JSON**"

#: ../../source/credential_types.rst:179
msgid "View more JSON examples at `<www.json.org>`_."
msgstr "要查看更多 JSON 示例，请访问 `<www.json.org>`_。"

#: ../../source/credential_types.rst:181
msgid "The configuration in JSON format below show each field and how they are used:"
msgstr "以下 JSON 格式的配置显示每个字段以及它们的使用方式："

#: ../../source/credential_types.rst:217
msgid "When ``type=string``, fields can optionally specify multiple choice options:"
msgstr "当 ``type=string`` 时，字段可以选择性地指定多个选择选项："

#: ../../source/credential_types.rst:231
msgid "In the **Injector Configuration** field, enter environment variables or extra variables that specify the values a credential type can inject. The format can be in YAML or JSON (see examples in the previous step). The configuration in JSON format below show each field and how they are used:"
msgstr "在 **Injector Configuration** 字段中，输入环境变量或额外变量来指定凭证类型可注入的值。格式可以为 YAML 或 JSON（请参阅上一步中的示例）。以下 JSON 格式的配置显示每个字段以及它们的使用方式："

#: ../../source/credential_types.rst:247
msgid "Credential Types can also generate temporary files to support .ini files or certificate/key data:"
msgstr "凭证类型还可生成临时文件来支持 .ini 文件或证书/密钥数据："

#: ../../source/credential_types.rst:260
msgid "In this example, the |at| will write a temporary file that contains:"
msgstr "在这个示例中，|at| 将编写包含以下内容的临时文件："

#: ../../source/credential_types.rst:266
msgid "The absolute file path to the generated file will be stored in an environment variable named ``MY_CLOUD_INI_FILE``."
msgstr "所生成文件的绝对文件路径将存储在名为 ``MY_CLOUD_INI_FILE`` 的环境变量中。"

#: ../../source/credential_types.rst:269
msgid "An example of referencing multiple files in a custom credential template is as follows:"
msgstr "以下是在自定义凭证模板中引用多个文件的示例："

#: ../../source/credential_types.rst:271
msgid "**Inputs**"
msgstr "**Inputs**"

#: ../../source/credential_types.rst:287
msgid "**Injectors**"
msgstr "**Injectors**"

#: ../../source/credential_types.rst:303
msgid "Click **Save** when done."
msgstr "完成后请点击 **Save**。"

#: ../../source/credential_types.rst:305
msgid "Scroll down to the bottom of the screen and your newly created credential type appears on the list of credential types:"
msgstr "向下滚动到屏幕底部，您新创建的凭证类型会出现在凭证类型列表中："

#: ../../source/credential_types.rst:307
msgid "|New credential type|"
msgstr "|New credential type|"

#: ../../source/credential_types.rst:311
msgid "Click |edit| to modify the credential type options under the Actions column."
msgstr "点 |edit| 修改 Actions 列下的凭证类型选项。"

#: ../../source/credential_types.rst:315
msgid "In the Edit screen, you can modify the details or delete the credential. If the **Delete** button is grayed out, it is indication that the credential type that is being used by a credential, and you must delete the credential type from all the credentials that use it before you can delete it. Below is an example of such a message:"
msgstr "在 Edit 屏幕中，您可以修改详情或删除凭证。如果 **Delete** 按钮灰显，则表示凭证正在使用的凭证类型，且您必须在删除前从所有使用它的凭证类型中删除。以下是此类消息的示例："

#: ../../source/credential_types.rst:320
msgid "Verify that the newly created credential type can be selected from the **Credential Type** selection window when creating a new credential:"
msgstr "验证在创建新凭证时是否可从 **Credential Type** 选择窗口中选择新创建的凭证类型："

#: ../../source/credential_types.rst:322
msgid "|Verify new credential type|"
msgstr "|Verify new credential type|"

#: ../../source/credential_types.rst:326
msgid "For details on how to create a new credential, see :ref:`ug_credentials`."
msgstr "有关如何创建新凭证的详情，请参阅 :ref:`ug_credentials`。"

