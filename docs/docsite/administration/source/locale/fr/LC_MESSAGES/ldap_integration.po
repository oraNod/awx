# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Red Hat Inc.
# This file is distributed under the same license as the Ansible Tower
# Administration Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Tower Administration Guide 3.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-08 12:30-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 1.3\n"

#: ../../source/ldap_integration.rst:2
msgid "LDAP Integration"
msgstr ""

#: ../../source/ldap_integration.rst:11
msgid ""
"LDAP is an enterprise-level feature. You must have an active enterprise "
"license before beginning the configuration process."
msgstr ""

#: ../../source/ldap_integration.rst:14
msgid ""
"First, create a user in LDAP that has access to read the entire LDAP "
"structure."
msgstr ""

#: ../../source/ldap_integration.rst:16
msgid ""
"To test if you can make successful queries to the LDAP server, use the "
"following command, where *josie* and *Josie4Cloud* are replaced by "
"attributes that work for your setup:"
msgstr ""

#: ../../source/ldap_integration.rst:25
msgid ""
"Here ``CN=josie,CN=users,DC=website,DC=com`` is the Distinguished Name of"
" the connecting user."
msgstr ""

#: ../../source/ldap_integration.rst:28
msgid ""
"This can be added to the Parameter ``AUTH_LDAP_BIND_DN =`` to specify the"
" user that Tower uses to connect (Bind) to the LDAP server."
msgstr ""

#: ../../source/ldap_integration.rst:32
msgid ""
"LDAP and Active Directory integration is controlled by the settings "
"defined in the ``/etc/tower/conf.d/ldap.py`` file. In versions of Tower "
"older than 2.2, these settings lived in ``/etc/tower/settings.py``."
msgstr ""

#: ../../source/ldap_integration.rst:35
msgid "The next parameter specifies which password to use for the Binding user:"
msgstr ""

#: ../../source/ldap_integration.rst:43
msgid "To define where to search for users while authenticating, use:"
msgstr ""

#: ../../source/ldap_integration.rst:55
msgid ""
"The first line specifies where to search for users in the LDAP tree. In "
"the above example, the users are searched recursively starting from "
"``DC=WEBSITE,DC=COM``."
msgstr ""

#: ../../source/ldap_integration.rst:57
msgid "The second line specifies the scope where the users should be searched:"
msgstr ""

#: ../../source/ldap_integration.rst:59
msgid ""
"SCOPE_BASE:  This value is used to indicate searching only the entry at "
"the base DN, resulting in only that entry being returned"
msgstr ""

#: ../../source/ldap_integration.rst:60
msgid ""
"SCOPE_ONELEVEL:  This value is used to indicate searching all entries one"
" level under the base DN - but not including the base DN and not "
"including any entries under that one level under the base DN."
msgstr ""

#: ../../source/ldap_integration.rst:61
msgid ""
"SCOPE_SUBTREE: This value is used to indicate searching of all entries at"
" all levels under and including the specified base DN."
msgstr ""

#: ../../source/ldap_integration.rst:64
msgid ""
"The third line specifies the key name where the user name is stored. For "
"example, to query the AD LDAP using ``ldapsearch`` with a filter for the "
"user, use something like:"
msgstr ""

#: ../../source/ldap_integration.rst:70
msgid "Which returns something like:"
msgstr ""

#: ../../source/ldap_integration.rst:89
#, python-format
msgid ""
"Here we see that name is stored in key ``sAMAccountName``--hence the line"
" becomes ``'(sAMAccountName=%(user)s)'``."
msgstr ""

#: ../../source/ldap_integration.rst:92
#, python-format
msgid ""
"Similarly, for OpenLDAP, the key is ``uid``--hence the line becomes "
"``'(uid=%(user)s)',``."
msgstr ""

#: ../../source/ldap_integration.rst:95
msgid "The next directives specifies the user attributes."
msgstr ""

#: ../../source/ldap_integration.rst:106
msgid ""
"The above example says that the users last name can be retrieved from the"
" key ``sn`` in the ``ldapsearch``. You can use the same LDAP query for "
"the user to figure out what keys they are stored under."
msgstr ""

#: ../../source/ldap_integration.rst:108
msgid ""
"The next directive specifies the where the groups should be searched and "
"how to search them."
msgstr ""

#: ../../source/ldap_integration.rst:118
msgid "The first line specifies the BASE DN where the groups should be searched."
msgstr ""

#: ../../source/ldap_integration.rst:119
msgid ""
"The second lines specifies the scope and is the same as that for the user"
" directive."
msgstr ""

#: ../../source/ldap_integration.rst:120
msgid ""
"The third line specifies what the ``objectclass`` of a group object is in"
" the LDAP you are using."
msgstr ""

#: ../../source/ldap_integration.rst:122
msgid ""
"You could make another ``ldapsearch`` and check in one group, which is "
"the ``objectclass`` to which it belongs. For example:"
msgstr ""

#: ../../source/ldap_integration.rst:135
msgid ""
"The next directive specifies the type of group. Supported group types are"
" listed here: http://pythonhosted.org/django-auth-ldap/groups.html#types-"
"of-groups"
msgstr ""

#: ../../source/ldap_integration.rst:141
msgid ""
"With these directives filled in and others commented, you now should be "
"able to make a successful authentication with LDAP."
msgstr ""

#: ../../source/ldap_integration.rst:145
msgid ""
"Tower does not actively sync users, but they are created during their "
"initial login."
msgstr ""

#: ../../source/ldap_integration.rst:149
msgid "LDAPS"
msgstr ""

#: ../../source/ldap_integration.rst:155
msgid ""
"To enable secure LDAP communication with the LDAP server change the LDAP "
"URL to LDAPS in the ``AUTH_LDAP_SERVER_URI`` directive. Make sure the "
"server name in the URI matches the name in the certificate. Finally, add "
"the server certificate to your Tower instance by adding the path which in"
" CentOS is ``/etc/openldap/ldap.conf`` and the directive is  ``TLS_CACERT"
" /etc/openldap/certs/cert.pem``."
msgstr ""

#: ../../source/ldap_integration.rst:157
msgid ""
"To disable the certificate check, add the following lines to the "
"``/etc/tower/conf.d/ldap.py`` file:"
msgstr ""

#: ../../source/ldap_integration.rst:167
msgid "Debugging"
msgstr ""

#: ../../source/ldap_integration.rst:173
msgid ""
"Debugging LDAP connections can be enabled by adding the below lines in "
"the ``/etc/tower/conf.d/ldap.py`` file."
msgstr ""

#: ../../source/ldap_integration.rst:192
msgid "Referrals"
msgstr ""

#: ../../source/ldap_integration.rst:198
msgid ""
"Active Directory uses \"referrals\" in case the queried object is not "
"available in its database. It has been noted that this does not work "
"properly with the django LDAP client and, most of the time, it helps to "
"disable referrals. Disable LDAP referrals by adding the following lines "
"to your ``/etc/tower/conf.d/ldap.py`` file:"
msgstr ""

#: ../../source/ldap_integration.rst:210
msgid ""
"\"Referrals\" are disabled by default in |at| version 2.4.3 and above.  "
"If you are running an earlier version of Tower, you should consider "
"adding this parameter to your configuration file."
msgstr ""

