# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Red Hat Inc.
# This file is distributed under the same license as the Ansible Tower
# Administration Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Tower Administration Guide 3.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-22 15:11-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/proxy-support.rst:3
msgid "Proxy Support"
msgstr "プロキシーのサポート"

#: ../../source/proxy-support.rst:6
msgid "This content has been moved to the |atir| - see the :ref:`ir_proxy_support` section there."
msgstr "このコンテンツは『|atir|』に移動しました。「:ref:`ir_proxy_support`」セクションを参照してください。"

#~ msgid "Proxy servers act as an intermediary for requests from clients seeking resources from other servers. A client connects to the proxy server, requesting some service or available resource from a different server, and the proxy server evaluates the request as a way to simplify and control its complexity."
#~ msgstr ""

#~ msgid "Using SSL offloading or using a proxy that handles SSL for Tower does not work and is not supported. Tower requires the use of transparent proxies. If using ELB in AWS, ensure that \"Proxy Protocol\" is not enabled."
#~ msgstr ""

#~ msgid "Sessions in Tower associate an IP address upon creation. Tower policy requires that any use of the session match the original associated IP address."
#~ msgstr ""

#~ msgid "To provide proxy server support, Tower handles proxied requests (such as ELB in front of Tower, HAProxy, Squid, and tinyproxy) via the ``REMOTE_HOST_HEADERS`` list variable in Tower settings (``/etc/tower/conf.d/remote_host_headers.py``). By default ``REMOTE_HOST_HEADERS`` is set to ``['REMOTE_ADDR', 'REMOTE_HOST']``."
#~ msgstr ""

#~ msgid "To enable proxy server support, setup ``REMOTE_HOST_HEADERS`` like the following: ``REMOTE_HOST_HEADERS = ['HTTP_X_FORWARDED_FOR', 'REMOTE_ADDR', 'REMOTE_HOST']``"
#~ msgstr ""

#~ msgid "Tower determines the remote host's IP address by searching through the list of headers in ``REMOTE_HOST_HEADERS`` until the FIRST IP address is located."
#~ msgstr ""

#~ msgid "Header names are constructed using the following logic:"
#~ msgstr ""

#~ msgid "With the exception of ``CONTENT_LENGTH`` and ``CONTENT_TYPE``, any HTTP headers in the request are converted to META keys by converting all characters to uppercase, replacing any hyphens with underscores, and adding an ``HTTP_`` prefix to the name. For example, a header called ``X-Barkley`` would be mapped to the META key ``HTTP_X_Barkley``."
#~ msgstr ""

#~ msgid "For more information on HTTP request and response objects, refer to: https://docs.djangoproject.com/en/1.8/ref/request-response/#django.http.HttpRequest.META"
#~ msgstr ""

#~ msgid "Reverse Proxy"
#~ msgstr ""

#~ msgid "If you are behind a reverse proxy, you may want to setup a header field for ``HTTP_X_FORWARDED_FOR``. The ``X-Forwarded-For`` (XFF) HTTP header field identifies the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer."
#~ msgstr ""

